# {{ ansible_managed }}

upstream {{ item.name }} {
    {% if item.lb_method is defined %}
    {{ item.lb_method }};
    {% endif %}
    {% for backend in item.backends %}
    server {{ backend }};
    {% endfor %}
}

{% if nginx_reverse_enable_rate_limiting %}
limit_req_zone $binary_remote_addr zone=perip:{{ nginx_reverse_rate_limiting_zone_size }}m rate={{ nginx_reverse_rate_limiting_requests_per_second }}r/s;
limit_req_log_level error;
limit_req_status 429;
{% endif %}

{% if item.ssl_enabled |default(false) %}
server {
    listen 80;
    server_name {{ item.domains|join(' ') }};
    return 301 https://$host$request_uri;
}
{% endif %}

server {
    {% if not item.ssl_enabled -%}
    listen {{ nginx_reverse_port }};
    {%- endif %}
    {%- if item.ssl_enabled |default(false) -%}
    listen {{ nginx_reverse_ssl_port}} ssl;

    ssl_certificate {{ item.ssl_certificate }};
    ssl_certificate_key {{ item.ssl_certificate_key }};
    {% endif %}

    server_name {{ item.domains|join(' ') }};

    location / {
        {% if nginx_reverse_enable_rate_limiting %}
        limit_req zone=perip burst={{ nginx_reverse_rate_limiting_requests_burst_size }};
        {% endif %}

        {% if item.max_body_size %}
        client_max_body_size {{ item.max_body_size }};
        {% endif %}
        
        proxy_set_header   X-Real-IP       $remote_addr;
        proxy_set_header   Host            $http_host;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass         {{ item.backend_protocol | default('http') }}://{{ item.name }};
    }
}
